{"ast":null,"code":"var _jsxFileName = \"/Users/taqtile/Documents/project/todo-list/src/components/org.todo-list/todo-list.components.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const addTodo = () => {\n    if (newTodo.trim() !== \"\") {\n      setTodos([...todos, {\n        id: Date.now(),\n        text: newTodo,\n        completed: false\n      }]);\n      setNewTodo(\"\");\n    }\n  };\n  const toggleTodo = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const removeTodo = id => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"border p-2 w-full\",\n        placeholder: \"Adicione uma tarefa...\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `flex items-center justify-between p-2 border-b ${todo.completed ? \"line-through text-gray-500\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleTodo(todo.id),\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(todo.id),\n          className: \"text-red-500\",\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"9qzns8gAgtpTG51YK+AHdxH8LRs=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","newTodo","setNewTodo","addTodo","trim","id","Date","now","text","completed","toggleTodo","prevTodos","map","todo","removeTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/taqtile/Documents/project/todo-list/src/components/org.todo-list/todo-list.components.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\nexport const TodoList: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [newTodo, setNewTodo] = useState<string>(\"\");\n\n  const addTodo = () => {\n    if (newTodo.trim() !== \"\") {\n      setTodos([...todos, { id: Date.now(), text: newTodo, completed: false }]);\n      setNewTodo(\"\");\n    }\n  };\n\n  const toggleTodo = (id: number) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const removeTodo = (id: number) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-8\">\n      <div className=\"flex items-center\">\n<h1></h1>\n\n        <input\n          type=\"text\"\n          className=\"border p-2 w-full\"\n          placeholder=\"Adicione uma tarefa...\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button\n          onClick={addTodo}\n          className=\"ml-2 p-2 bg-blue-500 text-white rounded\"\n        >\n          Adicionar\n        </button>\n      </div>\n\n      <ul className=\"mt-4\">\n        {todos.map((todo) => (\n          <li\n            key={todo.id}\n            className={`flex items-center justify-between p-2 border-b ${\n              todo.completed ? \"line-through text-gray-500\" : \"\"\n            }`}\n          >\n            <span onClick={() => toggleTodo(todo.id)}>{todo.text}</span>\n            <button\n              onClick={() => removeTodo(todo.id)}\n              className=\"text-red-500\"\n            >\n              Remover\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}